- name: Prepares the Proxmox nodes
  hosts: proxmox
  gather_facts: true
  become: true
  tags: prepare
  vars_files:
    - vars/{{ ansible_os_family }}.yml
  roles:
    - wake
    - bootstrap
    - geerlingguy.ntp
    - geerlingguy.pip
  tasks:
    - name: Update hostname
      tags: hostname
      block:
        - name: Set correct hostname and domain
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}.{{ pve_domain }}"

        - name: Set hostname to /etc/hostname
          ansible.builtin.copy:
            dest: /etc/hostname
            content: "{{ inventory_hostname }}"

        - name: Update /etc/hosts
          ansible.builtin.replace:
            dest: /etc/hosts
            regexp: "^({{ ansible_default_ipv4.address }}.*)$"
            replace: "{{ ansible_default_ipv4.address }} {{ inventory_hostname }}.{{ pve_domain }} {{ inventory_hostname }}"
            backup: true

        - name: Update search-domain in /etc/resolv.conf
          ansible.builtin.replace:
            dest: /etc/resolv.conf
            regexp: "^search.*$"
            replace: "search {{ pve_domain }}"
            backup: true

    - name: Symlink /etc/ntp.conf to ntp_config_file
      ansible.builtin.file:
        src: "{{ ntp_config_file }}"
        dest: /etc/ntp.conf
        state: link
        force: true
      when: ntp_config_file != '/etc/ntp.conf'

- name: Install Proxmox on nodes
  hosts: proxmox
  gather_facts: true
  become: true
  tags:
    - install
  vars_files:
    - vars/{{ ansible_os_family }}.yml
  tasks:
    - name: Include lae.proxmox role for Proxmox cluster setup
      ansible.builtin.import_role:
        name: lae.proxmox
      vars:
        pve_check_for_kernel_update: false
        pve_reboot_on_kernel_update: false
        pve_run_system_upgrades: false
        pve_run_proxmox_upgrades: false

- name: Post-install configure Proxmox nodes
  hosts: proxmox
  gather_facts: true
  become: true
  tags: configure
  vars_files:
    - vars/{{ ansible_os_family }}.yml
  tasks:
    - name: API Token Generation
      tags: always
      ansible.builtin.include_tasks:
        file: tasks/pve-token.yml
        apply:
          tags: ["configure"]
      loop: "{{ pve_users | subelements('api_tokens', skip_missing=true) }}"
      when: inventory_hostname == groups[pve_group][0]
