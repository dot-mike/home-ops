[defaults]
# General settings
stdout_callback             = yaml
stderr_callback             = yaml
display_skipped_hosts       = False
deprecation_warnings        = False
action_warnings             = False
force_color                 = True
verbosity                   = 0
#enable_task_debugger       = True
nocows                      = True
retry_files_enabled         = False
# Files and directories
inventory                   = inventory/hosts.yml
# SSH settings
remote_port                 = 22
timeout                     = 60
# Plugin settings
vars_plugins_enabled = host_group_vars,community.sops.sops

[ssh_connection]
; Ref.: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/ssh_connection.html

; "Pipelining, if supported by the connection plugin, reduces the number of network operations required to execute a
;  module on the remote server, by executing many Ansible modules without actual file transfer. This can result in a
;  very significant performance improvement when enabled. However this conflicts with privilege escalation (become).
;  For example, when using ‘sudo:’ operations you must first disable ‘requiretty’ in /etc/sudoers on all managed hosts,
;  which is why it is disabled by default. This option is disabled if ANSIBLE_KEEP_REMOTE_FILES is enabled. This is a
;  global option, each connection plugin can override either by having more specific options or not supporting
;  pipelining at all."
; Ref.: https://docs.ansible.com/ansible/latest/reference_appendices/config.html
pipelining = True

ssh_args = -C -o ControlMaster=auto -o ControlPersist=30m -o StrictHostKeyChecking=accept-new
; Example for storing user host key database in local project directory instead of ~/.ssh/known_hosts
;ssh_args = ... -o 'UserKnownHostsFile=.ssh_known_hosts'
